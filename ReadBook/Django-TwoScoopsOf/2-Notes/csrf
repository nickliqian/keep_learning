Django内置了跨站请求伪造保护（CSRF），Django入门教程的第4部分介绍了它的使用。这很容易使用，而Django在开发过程中甚至会忘记使用它。这是一个严重的安全问题，在这里和我们的安全章节中，我们推荐使用Django的CSRF保护功能。

根据我们的经验，在整个站点中关闭CSRF保护的唯一用例是创建机器可访问的API。 API框架如django-tastypie和django-rest-framework可以为您做到这一点。由于API请求应该在每个请求的基础上进行签名/认证，所以这两个框架通常不依赖于HTTP cookie进行认证。因此，使用这些框架时，CSRF并不总是一个问题。

如果您从头开始编写接受数据更改的API，那么在https://docs.djangoproject.com/en/1.8/ref/csrf/上熟悉Django的CSRF文档是一个好主意。


GET方法不会触发CSRF


