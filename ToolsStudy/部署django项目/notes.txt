1. 安装uwsgi
pip install uwsgi
创建uwsgi.ini,在/root/NickBlog/NickBlog/uwsgi.ini
启动 需要在安装了uwsgi的python环境中运行
uwsgi --ini uwsgi.ini
停止服务
killall -9 uwsgi;

启动：uwsgi --ini uwsgi.ini
停止：uwsgi --stop uwsgi.pid
重启：uwsgi --reload uwsgi.pid

[uwsgi]
# Django-related settings
socket = :8000
# the base directory (full path)
chdir = /root/NickBlog/
wsgi-file = /NickBlog/wsgi.py
# Django s wsgi file
module =NickBlog.wsgi
# process-related settings
# master
master = true
# maximum number of worker processes
processes = 4
# ... with appropriate permissions - may be needed
# chmod-socket    = 664
# clear environment on exit
vacuum = true
pidfile=uwsgi.pid
daemonize=uswgi.log


nginx
sudo apt-get install nginx
/etc/nginx/sites-enabled/default
nginx
nginx -v
nginx -s reload
nginx -s stop

# site_nginx.conf
# the upstream component nginx needs to connect to
upstream django {
    # server unix:///path/to/your/mysite/mysite.sock; # for a file socket
    server 127.0.0.1:8000; # for a web port socket (we'll use this first)
}
# configuration of the server
server {
    # the port your site will be served on
    listen      80;
    # the domain name it will serve for
    # server_name .liqian.ink; # substitute your machine's IP address or FQDN
    charset     utf-8;

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    # Django media
    location /media  {
       # alias /var/www/NickBlog/media;  # your Django project's media files - amend as required
        alias /var/www/NickBlog/media;
    }

    location /static {
        alias /var/www/NickBlog/static; # your Django project's static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include     uwsgi_params; # the uwsgi_params file you installed
    }
}



reloadService
killall -9 uwsgi;
cd /root/NickBlog/NickBlog/;
uwsgi --ini /root/NickBlog/NickBlog/uwsgi.ini;
nginx -s reload;

